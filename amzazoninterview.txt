Amazon questions.

1.> Find sortest path in 2-d matrix start from 0,0 and reach to thaat localtion (i,j) == 9. You can move to down and right.
--> Hint: When we need to find shortes path and distance between 2 neighbour node (i.e node in graph or (i,j) to (i+1,j) or (i,j+1) anything) is 		  euqal to 1.
          Then use "BFS".
      --> We only use Dijskatra shortest path when distance between 2 neightbour node is not always 1.
--> Time Complexity -> O(nsquare)
 (BFS-> We use queue in BFS mostly. We can also use priority queue if we have some key as min or max.)

-------------------------------------------------------------------------------------------------

2.> Boundry Traversal Of Binary Tree

--> Given a binary tree, print boundry nodes of the binary tree ANti-Clockwise strting from root.
--> line (https://www.geeksforgeeks.org/boundary-traversal-of-binary-tree/)

--> Hint:
        Bruteforce solution -> Print left view + leaf nodes + right view.
                            -> But there are nodes which also comes in leaf + right/left. So we need to maintain array for which node already
				printed.

	Good Solution       ->  Print left view staring from root apart from leaf node.
				Then print leaf nodes.
                                Then print right view apart from leaf node (starting from leaf node end go back to root.)

			     -> https://www.youtube.com/watch?v=xwPKlgz6mdM&t=2053s 	  
			     -> Time complexity = o(no. of nodes)

-------------------------------------------------------------------------------------------------	

3.> Rearrange a given linked list in-place.

--> Link of question : https://www.geeksforgeeks.org/rearrange-a-given-linked-list-in-place/

--> Note: In signly linked list we can not traverse from last to first.
          -- So when we think(required) in question to traverse from last to first then always think about reversing the linked list first. 

--> Solution:
1) Find the middle point using tortoise and hare method.
2) Split the linked list into two halves using found middle point in step 1.
3) Reverse the second half.
4) Do alternate merge of first and second halves.

-------------------------------------------------------------------------------------------------



